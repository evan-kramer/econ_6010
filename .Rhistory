transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167) %>%
left_join(transmute(absenteeism, #read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/100_ChronicAbsenteeismStudentFile_25Jul2018.csv"),
student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days),
by = "student_id")
View(check)
source('N:/ORP_accountability/projects/Evan/Accountability/Analysis/Code/accountability/2018-accountability/absenteeism.R')
check = readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167) %>%
left_join(transmute(absenteeism, #read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/100_ChronicAbsenteeismStudentFile_25Jul2018.csv"),
student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days),
by = "student_id")
read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
janitor::clean_names()
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) #%>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) #%>%
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names()
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total))
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) #%>%
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key") %>%
filter(school == 50)
check = readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4)
check = readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167) %>%
left_join(read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
janitor::clean_names() %>%
transmute(student_id = STUDENT_KEY, n_)
transmute(absenteeism, #read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/100_ChronicAbsenteeismStudentFile_25Jul2018.csv"),
student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days),
by = "student_id")
check = readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167) %>%
left_join(transmute(read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/100_ChronicAbsenteeismStudentFile_25Jul2018.csv"),
student_id, n_absences, isp_days, instructional_calendar_days),
by = "student_id")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total))
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key") %>%
transmute(student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days) %>%
right_join(readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167),
by = "student_id")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv")
check = read_csv("C:/Users/CA19130/Downloads/keenburg attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key") %>%
transmute(student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days) %>%
right_join(readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167),
by = "student_id")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key") %>%
transmute(student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days) %>%
right_join(readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167),
by = "student_id")
check = read_csv("C:/Users/CA19130/Downloads/keenburg_attendance.csv") %>%
clean_names() %>%
transmute(instructional_program_num = as.numeric(instructional_program_num),
district_no = as.numeric(district_no), school_no = as.numeric(school_no),
grade, student_key, begin_date, end_date,
isp_days = as.numeric(isp_days), cnt_total = as.numeric(cnt_total)) %>%
filter(grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")) %>%
transmute(instructional_program_num, system = district_no, school = school_no, grade,
student_key = as.integer(student_key), begin_date, end_date, isp_days,
count_total = if_else(is.na(cnt_total), 0, cnt_total)) %>%
# For students with same system, school, student ID, enrollment dates, take maximum instructional program days
# (Drops 0 records)
group_by(system, school, student_key, grade, begin_date, end_date) %>%
mutate(count = n(), temp = max(isp_days)) %>%
filter(count == 1 | isp_days == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days,
# take maximum number of absences (Drops 9 records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days) %>%
mutate(count = n(), temp = max(count_total)) %>%
filter(count == 1 | count_total == temp) %>%
# For students with same system, school, student ID, enrollment dates, instructional program days, absences,
# take maximum instructional program number (Doesn't drop any records)
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total) %>%
mutate(count = n(), temp = max(instructional_program_num)) %>%
filter(count == 1 | instructional_program_num == temp) %>%
# Drop duplicates on system, school, student ID, enrollment dates, instructional program days, absences, instructional program
group_by(system, school, student_key, grade, begin_date, end_date, isp_days, count_total, instructional_program_num) %>%
mutate(count = 1, temp = cumsum(count)) %>%
filter(temp == 1) %>%
# Collapse multiple enrollments at the same school
rename(n_absences = count_total) %>%
group_by(system, school, grade, student_key) %>%
summarise_at(c("n_absences", "isp_days"), sum, na.rm = TRUE) %>%
ungroup() %>%
# Merge on instructional calendar file
inner_join(instructional_days, by = c("system", "school")) %>%
mutate(n_students = 1,
grade = case_when(
grade %in% c("K", "01", "02", "03", "04", "05", "06", "07", "08") ~ "K through 8th",
grade %in% c("09", "10", "11", "12") ~ "9th through 12th"
),
chronic_absence = as.integer(n_absences/isp_days >= 0.1),
All = 1L) %>%
left_join(demographic, by = "student_key") %>%
transmute(student_id = student_key, n_absences, isp_days, instructional_calendar_days = instructional_days) %>%
right_join(readxl::read_excel("C:/Users/CA19130/Downloads/keenburg attendance.xls", skip = 4) %>%
transmute(student_id = `State ID`, n_absences = ifelse(is.na(`Total  Absences`), 0, `Total  Absences`),
isp_days = `Total Instructional Days Enrolled`, instructional_calendar_days = 167),
by = "student_id")
absenteeism
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv")
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days)
read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv")
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days) %>%
full_join(read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days),
by = "student_id")
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days) %>%
full_join(read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days),
by = "student_id") %>%
filter(n_absences.x != n_absences.y)
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv")
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days) %>%
full_join(read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days),
by = "student_id") %>%
mutate(diff = n_absences.x - n_absences.y) %>%
group_by(diff) %>%
summarize(n = n())
read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv")
read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv")
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days) %>%
full_join(read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days),
by = "student_id") #%>%
by = c("system", "school", "student_id") #%>%
select(system, school, student_id, n_absences:instructional_calendar_days),
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days) %>%
full_join(read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days),
by = c("system", "school", "student_id")) %>%
mutate(diff = n_absences.x - n_absences.y) %>%
group_by(diff) %>%
summarize(n = n())
check = read_csv("N:/ORP_accountability/projects/NCLBAppeals/Accountability Web Files/792_ChronicAbsenteeismStudentFile_25Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days) %>%
full_join(read_csv("N:/ORP_accountability/projects/NCLBAppeals/2017-18 Archive Accountability Web Files/20180705/792_ChronicAbsenteeismStudentFile_5Jul2018.csv") %>%
select(system, school, student_id, n_absences:instructional_calendar_days),
by = c("system", "school", "student_id")) %>%
mutate(diff = n_absences.x - n_absences.y)
filter(check, diff != 0)
absenteeism
attendance <- read_dta("N:/ORP_accountability/data/2018_chronic_absenteeism/Instructional_Days_Student_file.dta")
names(attendance)
filter(attendance, is.na(enddate))
filter(attendance, is.na(end_date))
View(absenteeism)
read_delim("N:/ORP_accountability/data/2018_chronic_absenteeism/Instructional_Days_Student file_08132018.txt",
delim = "\t")
a = read_delim("N:/ORP_accountability/data/2018_chronic_absenteeism/Instructional_Days_Student file_08132018.txt",
delim = "\t")
filter(a is.na(END_DATE))
filter(a, is.na(END_DATE))
sum(is.na(a$END_DATE) / nrow(a))
# ECON 6010
# Evan Kramer
# 8/30/2018
library(tidyverse)
library(haven)
library(lubridate)
read_csv("N:/ORP_accountability/projects/2018_school_accountability/school_grading_grades.csv")
read_csv("N:/ORP_accountability/projects/2018_school_accountability/school_grading_grades.csv") %>%
left_join(read_csv("N:/ORP_accountability/data/2018_final_accountability_files/school_names.csv"),
by = c("system", "school"))
read_csv("N:/ORP_accountability/projects/2018_school_accountability/school_grading_grades.csv") %>%
left_join(read_csv("N:/ORP_accountability/data/2018_final_accountability_files/school_names.csv"),
by = c("system", "school")) %>%
select(starts_with("system"), starts_with("school"), everything())
read_csv("N:/ORP_accountability/projects/2018_school_accountability/school_grading_grades.csv") %>%
left_join(read_csv("N:/ORP_accountability/data/2018_final_accountability_files/school_names.csv"),
by = c("system", "school")) %>%
select(starts_with("system"), starts_with("school"), everything()) %>%
write_csv("C:/Users/CA19130/Downloads/school_grading_grades.csv", na = "")
options(java.parameters = "-Xmx16G")
library(tidyverse)
library(lubridate)
library(haven)
library(RJDBC)
a = read_csv("N:/ORP_accountability/data/2018_final_accountability_files/heat_map.csv")
names(a)
d = readxl::read_excel("Data/invest.xls")
source('~/Projects/ECON 6010/Code/econ_6010.R')
d
ggplot(group_by(d, YEAR), aes(y = mean(`F`), x = I, col = FIRM)) +
geom_point()
ggplot(filter(d, YEAR == min(YEAR, na.rm = T)), aes(y = mean(`F`), x = I, col = FIRM)) +
geom_point()
ggplot(filter(d, YEAR == min(YEAR, na.rm = T)), aes(y = `F`, x = I, col = FIRM)) +
geom_point()
ggplot(d, aes(y = `F`, x = I, col = FIRM, alpha = YEAR)) +
geom_point()
ggplot(d, aes(y = `F`, x = I, col = FIRM, size = YEAR)) +
geom_point()
ggplot(d, aes(y = `F`, x = I, col = FIRM, size = YEAR)) +
geom_point(alpha = 0.2)
ggplot(d, aes(y = `F`, x = I, col = factor(FIRM), size = YEAR)) +
geom_point(alpha = 0.2)
help(kmeans)
kmeans(d, 3)
ggplot(d, aes(y = `F`, x = I, size = factor(FIRM), col = YEAR)) +
geom_point(alpha = 0.2)
ggplot(d, aes(y = `F`, x = I, size = factor(FIRM), col = factor(YEAR))) +
geom_point(alpha = 0.2)
ggplot(d, aes(y = `F`, x = I, col = factor(FIRM), size = factor(YEAR))) +
geom_point(alpha = 0.2)
rm(d)
